defaultTasks 'build'

buildscript {
    repositories {
        if (project.hasProperty('local')) mavenLocal()
        mavenCentral()
        maven { url 'http://repository.activeeon.com/content/groups/proactive/' }
    }

    dependencies {
        classpath 'org.ow2.proactive:documentation:1.0.0-SNAPSHOT'
    }
}

allprojects {
    apply plugin: 'maven'
    apply plugin: 'java'

    group = 'org.ow2.proactive'
    version = cloudConnectorsVersion

    uploadArchives {
        repositories {
            mavenDeployer {
                snapshotRepository(url: "http://repository.activeeon.com/content/repositories/snapshots/") {
                    authentication(userName: "${System.getProperty('nexusUsername')}",
                            password: "${System.getProperty('nexusPassword')}")
                }
                repository(url: "http://repository.activeeon.com/content/repositories/releases/") {
                    authentication(userName: "${System.getProperty('nexusUsername')}",
                            password: "${System.getProperty('nexusPassword')}")
                }
            }
        }
    }
}

archivesBaseName = 'cloud_service_provider_connectors'

subprojects {

    rootProject.buildscript.repositories.each {
        repositories.add(it)
    }

    configurations {
        provided
    }
    sourceSets {
        main {
            compileClasspath += configurations.provided
        }
        test {
            compileClasspath += configurations.provided
            runtimeClasspath += configurations.provided
        }
    }

    dependencies {
        provided 'log4j:log4j:1.2.14'
        testCompile 'junit:junit:4.11'
        testCompile 'org.mockito:mockito-core:1.9.5'
    }

    task addons(type: Sync) {
        from jar
        from configurations.runtime
        into "$buildDir/addons"
    }
    build.dependsOn addons
}

project(':monitoring') {

    dependencies {
        compile 'com.google.guava:guava:14.0.1'
        provided "org.ow2.proactive:rm-server:$schedulingVersion"

        compile fileTree(dir: "${rootDir}/lib/", include: '*sigar*')

        testCompile 'commons-collections:commons-collections:3.2'
    }
}

project(':iaas-api') {

    dependencies {
        compile 'net.minidev:json-smart:1.1.1'
        compile 'com.jayway.jsonpath:json-path:0.8.1'
        compile 'org.apache.httpcomponents:httpclient:4.2.1'

        provided "org.ow2.proactive:scheduler-node:$schedulingVersion"
        provided "org.ow2.proactive:rm-server:$schedulingVersion"
        provided "org.ow2.proactive:rm-policy-scheduler:$schedulingVersion"

        compile project(':monitoring')

        testCompile "org.ow2.proactive:scheduler-server:$schedulingVersion"
    }
}

project('connectors').subprojects {
    dependencies {
        compile project(':iaas-api')
        provided "org.ow2.proactive:scheduler-node:$schedulingVersion"
        provided "org.ow2.proactive:rm-server:$schedulingVersion"
        provided "org.ow2.proactive:rm-policy-scheduler:$schedulingVersion"
    }
}

project('connectors:cloudstack') {
    dependencies {
        compile 'org.apache.commons:commons-io:1.3.2'
    }
}

project('connectors:numergy') {
    dependencies {
        compile 'org.apache.commons:commons-io:1.3.2'
    }
}

project('connectors:eucalyptus') {
    dependencies {
        compile fileTree("${rootDir}/lib/endorsed/typica.jar")
    }
}

project('connectors:vmware') {

    dependencies {
        compile fileTree("${rootDir}/lib/vcloud-java-sdk-5.1.0.jar")
        compile fileTree("${rootDir}/lib/rest-api-schemas-5.1.0.jar")
        compile fileTree("${rootDir}/lib/endorsed/vim25.jar")
        compile 'org.apache.commons:commons-io:1.3.2'

    }
}

project('functional-tests') {
    dependencies {
        compile project(':monitoring')
        compile project(':connectors:vmware')

        testCompile "org.ow2.proactive:scheduler-server:$schedulingVersion"
        testCompile project(':monitoring').sourceSets.test.output
    }

    test {
        forkEvery 1
	exclude 'org/ow2/proactive/iaas/SigarMonitoringTest**'
	exclude 'org/ow2/proactive/iaas/SigarServiceClientTest**'
        systemProperties << ['java.security.policy': file("$projectDir/src/test/resources/org/ow2/proactive/iaas/testsutils/config/client-java.security.policy").absolutePath]
        systemProperties << ['proactive.runtime.ping': false]
        systemProperties << ['scheduling.project.dir': file("$buildDir/")]

        testLogging {
            exceptionFormat = 'full'
        }
        beforeTest { descriptor ->
            logger.lifecycle("Running: " + descriptor)
        }
    }

    task proActiveLibs(type: Copy) {
        from configurations.testRuntime.files
        into file("$buildDir/dist/lib")
    }

    task proActiveConfiguration(type: Copy) {
        from fileTree('config')
        into file("$buildDir/config")
    }

    test.dependsOn proActiveConfiguration, proActiveLibs
}

project(':doc') {
    apply plugin: 'documentation'
    documentation.outputName = 'CloudServiceProviderConnectors'
    documentation.docDir = 'src'
    documentation.snippetsStart = rootProject.projectDir
}

task customLibs(type: Zip) {
    from 'lib', 'lib/endorsed'
    include '*.jar'
    exclude '*sigar*'
    classifier 'libs'
}

artifacts {
    archives customLibs
}
